{
	"info": {
		"_postman_id": "2ea72492-b09b-488d-885e-78f9f79da8b0",
		"name": "DevCamper API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37320214"
	},
	"item": [
		{
			"name": "Bootcamp",
			"item": [
				{
					"name": "Get all Bootcamps",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps"
							]
						},
						"description": "Get all bootcamps from database."
					},
					"response": []
				},
				{
					"name": "Get bootcamp by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/:bootcampId",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								":bootcampId"
							],
							"variable": [
								{
									"key": "bootcampId",
									"value": ""
								}
							]
						},
						"description": "Get a single bootcamp based on Bootcamp ID"
					},
					"response": []
				},
				{
					"name": "Add new Bootcamp",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"name": "cache-control",
								"type": "text"
							},
							{
								"key": "Postman-Token",
								"value": "<calculated when request is sent>",
								"name": "postman-token",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "content-type",
								"type": "text"
							},
							{
								"key": "Content-Length",
								"value": "<calculated when request is sent>",
								"name": "content-length",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "<calculated when request is sent>",
								"name": "host",
								"type": "text"
							},
							{
								"key": "User-Agent",
								"value": "PostmanRuntime/7.39.1",
								"name": "user-agent",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "*/*",
								"name": "accept",
								"type": "text"
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"name": "accept-encoding",
								"type": "text"
							},
							{
								"key": "Connection",
								"value": "keep-alive",
								"name": "connection",
								"type": "text"
							},
							{
								"key": "Content-type",
								"value": "application/json",
								"description": "JSON type",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n      \"name\": \"Temp Bootcamp\",\r\n\t\t\"description\": \"ModernTech has one goal, and that is to make you a rockstar developer and/or designer with a six figure salary. We teach both development and UI/UX\",\r\n\t\t\"website\": \"https://moderntech.com\",\r\n\t\t\"phone\": \"(222) 222-2222\",\r\n\t\t\"email\": \"enroll@moderntech.com\",\r\n\t\t\"address\": \"220 Pawtucket St, Lowell, MA 01854\",\r\n\t\t\"careers\": [\"Web Development\", \"UI/UX\", \"Mobile Development\"],\r\n\t\t\"housing\": false,\r\n\t\t\"jobAssistance\": true,\r\n\t\t\"jobGuarantee\": false,\r\n\t\t\"acceptGi\": true\r\n        }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps"
							]
						},
						"description": "Add a new bootcamp in the database. A user can add only one bootcamp and admin can add as much as he/she wants"
					},
					"response": []
				},
				{
					"name": "Updating a bootcamp",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Devworks Bootcamp\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/66b513665c3e8a9b9c53e03c",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"66b513665c3e8a9b9c53e03c"
							]
						},
						"description": "PUT Method to update the fields of a bootcamp. Only the user who created the bootcamp and the admins can make changes to a bootcamp."
					},
					"response": []
				},
				{
					"name": "Deleting a Bootcamp",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/66b5ebd30a4b58ca99f146f5",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"66b5ebd30a4b58ca99f146f5"
							]
						},
						"description": "Delete a bootcamp from the database. Only the user who created the database and the admins can do this."
					},
					"response": []
				},
				{
					"name": "Upload Photo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "C:\\Users\\Faiq\\Downloads\\pexels-goumbik-574071.jpg"
								}
							]
						},
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/5d713a66ec8f2b88b8f830b8/photo",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"5d713a66ec8f2b88b8f830b8",
								"photo"
							]
						},
						"description": "Upload a photo for the bootcamp. It stores the local address of the photo in the database."
					},
					"response": []
				}
			]
		},
		{
			"name": "Course",
			"item": [
				{
					"name": "Get All Courses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/courses",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"courses"
							]
						},
						"description": "Get all courses from the database."
					},
					"response": []
				},
				{
					"name": "Get Courses by Bootcamp",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/:bootcampId/courses",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								":bootcampId",
								"courses"
							],
							"variable": [
								{
									"key": "bootcampId",
									"value": ""
								}
							]
						},
						"description": "Get courses for a specific bootcamp from the database."
					},
					"response": []
				},
				{
					"name": "Add Course",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/:bootcampId/courses",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								":bootcampId",
								"courses"
							],
							"variable": [
								{
									"key": "bootcampId",
									"value": "",
									"type": "string"
								}
							]
						},
						"description": "Add a course for a bootcamp in the database. User and the admins can add as many as they want"
					},
					"response": []
				},
				{
					"name": "Get a single Course",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/courses/:courseID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"courses",
								":courseID"
							],
							"variable": [
								{
									"key": "courseID",
									"value": "",
									"type": "string"
								}
							]
						},
						"description": "Get a single course from the database based on course ID"
					},
					"response": []
				},
				{
					"name": "Update a course",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Temp Course\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/courses/:courseId",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"courses",
								":courseId"
							],
							"variable": [
								{
									"key": "courseId",
									"value": "",
									"type": "string"
								}
							]
						},
						"description": "Update fields of a course in the database. Only the user who created the course and admins can update a course."
					},
					"response": []
				},
				{
					"name": "Delete a Course",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"name": "cache-control",
								"type": "text"
							},
							{
								"key": "Postman-Token",
								"value": "<calculated when request is sent>",
								"name": "postman-token",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "<calculated when request is sent>",
								"name": "host",
								"type": "text"
							},
							{
								"key": "User-Agent",
								"value": "PostmanRuntime/7.39.1",
								"name": "user-agent",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "*/*",
								"name": "accept",
								"type": "text"
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"name": "accept-encoding",
								"type": "text"
							},
							{
								"key": "Connection",
								"value": "keep-alive",
								"name": "connection",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/v1/courses/66c49fe60968db56f93bdb01",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"courses",
								"66c49fe60968db56f93bdb01"
							]
						},
						"description": "Delete a course from the database. Authentication applies in this case as well"
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('TOKEN',pm.response.json().token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						},
						"description": "Register a user in the database."
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('TOKEN',pm.response.json().token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"temp@temp.com\",\r\n    \"password\":\"temp\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "Log the user in the database"
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"name": "cache-control",
								"type": "text"
							},
							{
								"key": "Postman-Token",
								"value": "<calculated when request is sent>",
								"name": "postman-token",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "<calculated when request is sent>",
								"name": "host",
								"type": "text"
							},
							{
								"key": "User-Agent",
								"value": "PostmanRuntime/7.39.1",
								"name": "user-agent",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "*/*",
								"name": "accept",
								"type": "text"
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"name": "accept-encoding",
								"type": "text"
							},
							{
								"key": "Connection",
								"value": "keep-alive",
								"name": "connection",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/v1/auth/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						},
						"description": "Get the current logged in user."
					},
					"response": []
				},
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"temp@temp.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/forgotpassword",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"forgotpassword"
							]
						},
						"description": "POST Method to send a forgot password token to the user's email account."
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\":\"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/resetpassword/:resetToken",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"resetpassword",
								":resetToken"
							],
							"variable": [
								{
									"key": "resetToken",
									"value": "",
									"type": "string"
								}
							]
						},
						"description": "PUT Method to reset password. reset token is required in the params and new password in the body for the method to work properly."
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"John Smith\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/updatecredentials",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"updatecredentials"
							]
						},
						"description": "Update Logged in User's Credentials"
					},
					"response": []
				},
				{
					"name": "Update Password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"newPassword\":\"1234567\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/updatepassword",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"updatepassword"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						},
						"description": "Logout the user from the database and clear the cookies for security."
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Get Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						},
						"description": "Get all users stored in the databse."
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"type": "string"
								}
							]
						},
						"description": "Get a single User from the database based on User ID"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"John Smith\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/users/:userID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":userID"
							],
							"variable": [
								{
									"key": "userID",
									"value": ""
								}
							]
						},
						"description": "Update User Credentials in the database."
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"type": "string"
								}
							]
						},
						"description": "Delete a user from the Database"
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						},
						"description": "Create a new User in the database"
					},
					"response": []
				}
			],
			"description": "User Methods that can only be used by the admins"
		},
		{
			"name": "Reviews",
			"item": [
				{
					"name": "Get Reviews",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reviews",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reviews"
							]
						},
						"description": "Get all Reviews of all bootcamps."
					},
					"response": []
				},
				{
					"name": "Get Bootcamp Reviews",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/:bootcampId/reviews",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								":bootcampId",
								"reviews"
							],
							"variable": [
								{
									"key": "bootcampId",
									"value": "",
									"type": "string"
								}
							]
						},
						"description": "Get all reviews for a specific bootcamp."
					},
					"response": []
				},
				{
					"name": "Create Review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/:bootcampId/reviews",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								":bootcampId",
								"reviews"
							],
							"variable": [
								{
									"key": "bootcampId",
									"value": "",
									"type": "string"
								}
							]
						},
						"description": "Create a review for a bootcamp. A user cannnot create more than one review per course"
					},
					"response": []
				},
				{
					"name": "Update Review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"rating\":5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/reviews/5d7a514b5d2c12c7449be020",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								"5d7a514b5d2c12c7449be020"
							]
						},
						"description": "Update Review in the database."
					},
					"response": []
				},
				{
					"name": "Delete Review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reviews/:reviewId",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								":reviewId"
							],
							"variable": [
								{
									"key": "reviewId",
									"value": "",
									"type": "string"
								}
							]
						},
						"description": "Delete a review from the database"
					},
					"response": []
				},
				{
					"name": "Get User Reviews",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						},
						"description": "Get a user's every review from the database"
					},
					"response": []
				},
				{
					"name": "Get Review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reviews/:reviewId",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								":reviewId"
							],
							"variable": [
								{
									"key": "reviewId",
									"value": ""
								}
							]
						},
						"description": "Get a single review based on review ID"
					},
					"response": []
				}
			]
		}
	]
}